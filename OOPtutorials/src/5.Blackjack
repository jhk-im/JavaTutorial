https://jojoldu.tistory.com/62

주제
블랙잭 규칙에서 스펙아웃하여 규칙을 설정하고
콘솔로 진행하여 게임 할 수 있는 프로그램

블랙잭 규칙
-> 딜러와 게이머 단 2명만 존재한다.
-> 카드는 조커를 제외한 52장이다.
    -> 다이아몬드,하트,스페이드,클럽 무늬 A,2~10,K,Q,J
-> 2~10은 숫자 그대로 점수 / K,Q,J 는 10점 / A 는 1점
-> 딜러와 게이머는 순차적으로 카드를 하나씩 뽑아 각자 2개의 카드를 소지
-> 게이머는 얼마든지 카드를 추가로 뽑을 수 있다.
-> 딜러는 2카드의 합계 점수가 16점 이하이면 반드시 1장을 추가로 뽑고
   17점 이상이면 추가할 수 없다.
-> 양쪽다 추가 뽑기 없이, 카드를 오픈하면 딜러와 게이머 중
   소유한 카드의 합이 21에 가장 가까운 쪽이 승리한다.
-> 21을 초과한 쪽이 진다.

설계원칙
1. 클래스 우선이 아닌 객체의 속성과 행위 우선
    -> 클래스는 객체를 추상화하는 도구일 뿐이다.
2. 데이터가 아닌 메세지(행위)를 중심으로 객체를 설계
    -> 객체는 혼자 있을 수 없다. 다른 객체와의 협력 안에서만 존재할 수 있다.
    -> 메세지를 중심으로, 해당 메세지가 어떤 객체를 필요로 하는지를 생각하자.
3. 하나하나 지시하지 말고 요청하라.
    -> 판사가 증인에게 "목격했던 것을 떠올리고 떠올른 것을 순서대로 구성하여 간결하게 말하라"
       라고 하지 않고 "증언하라" 라고 요청 할 뿐이다.
    -> 마찬가지로 객체의 설계단계에서도 책임이 있는 객체에 요청만 하도록 설계한다.
4. 하나의 메소드는 하나의 일만 해야한다.
5. 처음부터 완벽한 설계는 없다.
    -> 설계를 코드로 구현해가는 과정에서 수정이 필요하다면 수정한다.

주요객체
-> 카드뭉치 (카드덱)
-> 카드
-> 규칙
-> 딜러
-> 게이머

주요 객체들의 속성과 역할
-> 카드뭉치 (카드덱)
    -> 52개의 서로다른 카드를 갖고 있다.
    -> 카드 1개를 뽑아준다.
-> 카드
    -> 다이아몬드, 한트, 스페이드, 클럽 중 1개의 무늬를 가지고 있다.
    -> A,2~10,K,Q,J 중 하나를 가지고 있다.
-> 규칙
    -> 점수를 측정해준다.
    -> 승패를 판단한다.
-> 딜러
    -> 추가로 카드를 받는다.
    -> 단, 2카드의 합계점수가 16점 이하이면 반드시 한장을 추가로 뽑고,
        -> 17점 이상이면 받을 수 없다.
    -> 뽑은 카드를 소유한다.
    -> 카드를 오픈한다.
-> 게이머
    -> 추가로 카드를 받는다.
    -> 뽑은 카드를 소유한다.
    -> 카드를 오픈한다.
