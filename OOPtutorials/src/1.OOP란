https://doitnow-man.tistory.com/50

1. 객체와 객체 지향 프로그램이란?

1) 프로그램 개발방식은, 절차 지향과 객체 지향으로 나뉜다.

// 절차지향 프로그래밍
-> 함수들을 중심으로 프로그램을 설계한 후 필요한 데이터를 정의하는 방식
    -> C 언어가 대표적이며 함수 위주의 구조화된 방식이다.
    -> 처음 시작되는 main() 함수에서 출발하여 순차적으로 실행
    -> main() 함수는 대부분 다른 함수를 순차적으로 호출하는 방식이다.
    -> 원시 데이터를 빠르고 효율적으로 계산하는 함수가 모듈단위로 구성됨
    -> 대량의 데이터를 순차적으로 처리하기 위한 알고리즘 구현 시 적합
    -> 프로그램 재사용이 어렵고 대규모의 프로그램 개발 및 유지 보수에 어려움
    -> C, FORTRAN, PASCAL 등

// 객체지향 프로그래밍
-> 데이터와 데이터에 관련된 처리 내용을 수행하는 메소드를 묶는 것
-> 객체를 중심으로 프로그램을 짜는 방식
-> 데이터 처리를 하는 메소드들을 하나의 프로그램으로 설계해서 연동하는 것
    -> 프로그램이 순차적으로 일어나지 않고 객체들로 이루어진 프로그램에서 이벤트가 일어나면
       그 이벤트를 처리하는 방식으로 프로그램이 실행됨
    -> C++, JAVA, ASP, VISUAL BASIC, C# 등 최근에 나오는 대부분의 프로그래밍 언어들
    -> 프로그램을 유연하고 변경이 용이하게 함
    -> 소프트웨어 개발과 유지 보수 간편화
    -> 직관적인 코드 분석이 가능함
    -> 실제 세계의 모습을 그대로 반영하지 못함.


2. 객체 지향 프로그램 절차
    1) 객체 지향 프로그램의 기본 구성

    // 클래스
    -> 객체를 정의한 것
    -> 실제 세계에 존재하는 사물이나 개념의 속성과 기능을 모델링해서 추상화시키는 과정
    -> 객체지향 프로그램의 기본적인 사용자 정의 데이터형
    클래스명 / 멤버변수,멤버상수 / 생성자 / 멤버 메소드

    // 객체
    -> 클래스에 정의된 메소드를 공유함으로써 메모리를 경제적으로 사용함
    -> 클래스의 인스턴스
    -> 정의된 클래스를 사용하여 실제로 메모리에 생성되어 메모리에 로딩된 상태
    -> 자신 고유의 속성을 가지며 클래스에서 정의한 행위를 수행할 수 있음
    -> 메모리를 경제적으로 사용함

    // 메시지와 메소드
    메시지 : 클래스로부터 생성된 객체를 사용하는 방법으로서 객체에 명령을 내림
    메소드 : 한 객체에 서브루틴 형태로 객체의 속성을 조작하는데 사용됨

    2) 객체지향 프로그램의 절차
        2-1 프로그램의 절차
        ->모델링 : 객체들에 대한 속성과 기능을 추출하여 UML 로 표현
        ->클래스 : 객체 모델링에서 추출한 정보를 소프트웨어로 구체화하는 작업
        ->객체생성 : 마지막으로 정의된 클래스를 메모리에 생성 로딩하여 메시지를 주고받도록 함

        2-2 프로그램 절차 예시
        주소록에 대한 객체 프로그래밍 절차를 정의한다.
        [주소록]
        이름      주소      전화번호
        Kim       서울      010-1111-2222
        Lee       부산      010-2222-3333

        //모델링
        -name : String
        -address : String
        -tel : String

        // 클래스
        +Address(name String, address String, tel String)
        getName() return name
        setName(name String)
        ... Address, Tel

        // 객체생성
        * 클래스를 인스턴스화
        Address ar = new Address();
        ar.setName("Kim");
        ar.setAddress("서울");
        ar.setTel("010-1111-2222");
        ...

3. 객체지향 프로그래밍의 주요 개념
    1) 주요개념
    객체모델링 / 클래스 / 객체생성
    * 객체 지향의 프로그램 절차를 어떠한 형식 또는 방향으로 설계해야 하는지에 대한 지침서이며 정형화된 모델링

    // 캡슐화
    -> 클래스에서 멤버들을 선언하고 구현할 때 불필요한 정보는 숨기고
       중요한 정보만을 표현함으로써 프로그램을 간단히 만드는 것으로 작업
       -> 자료 추상화 또는 데이터 은닉화라고도 함

    // 상속성
    -> 새로운 클래스가 기존의 클래스의 자료와 연산을 이용할 수 있게하는 기능
    -> 미리 만들어진 소스를 가지고 공유하며 재사용 함
    -> 특별한 부분에 대해서는 다시 재정의해서 사용하기도 함

    // 다형성
    -> 어떠한 요소에 여러 개념을 넣어 놓는 것
    오버라이딩 : 같은 이름의 메소드가 여러 클래스에서 다른 기능을 구현하는 것
    오버로딩 : 한 클래스에서 같은 이름의 메소드가 인자의 개수나 자료형에 따라 다른 기능을 구현하는 것


